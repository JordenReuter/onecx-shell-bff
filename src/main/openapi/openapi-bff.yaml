---
openapi: 3.0.3
info:
  title: onecx-shell-bff
  description: This API provides endpoints to load essential data like workspace configurations for the shell
  version: 1.0.0
servers:
  - url: http://onecx-shell-bff:8080/
tags:
  - name: workspaceConfig
    description: Retrieve Workspace Configurations
  - name: parameter
    description: Retrieve Parameters
  - name: userProfile
    description: Retrieve the User Profile
  - name: permission
    description: Retrieve Permissions
paths:
  /workspaceConfig:
    post:
      x-onecx:
        permissions:
          workspaceConfig:
            - read
      tags:
        - workspaceConfig
      description: Load all data needed by startup of OneCX UI (components, routes, slots, theme, workspace)
      operationId: loadWorkspaceConfig
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoadWorkspaceConfigRequest'
      responses:
        '200':
          description: Workspace configuration retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoadWorkspaceConfigResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        '404':
          description: Workspace configuration not found
  /workspaceConfig/themes/{name}/favicon:
    get:
      x-onecx:
        permissions:
          workspaceConfig:
            - read
      tags:
        - workspaceConfig
      description: Get favicon of a theme by its name
      operationId: getThemeFaviconByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
      responses:
        200:
          description: Favicon retrieved successfully
          content:
            image/x-icon:
              schema:
                minimum: 1
                maximum: 110000
                type: string
                format: binary
        404:
          description: Favicon not found

  /workspaceConfig/themes/{name}/logo:
    get:
      x-onecx:
        permissions:
          workspaceConfig:
            - read
      tags:
        - workspaceConfig
      description: Get the logo of a theme by its name
      operationId: getThemeLogoByName
      parameters:
        - name: name
          in: path
          required: true
          schema:
            type: string
        - name: small
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        200:
          description: Logo retrieved successfully
          content:
            image/*:
              schema:
                minimum: 1
                maximum: 110000
                type: string
                format: binary
        404:
          description: Logo not found
  /parameters:
    post:
      x-onecx:
        permissions:
          parameter:
            - read
      tags:
        - parameter
      operationId: getParameters
      description: Get all available parameters of the requested products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetParametersRequest'
      responses:
        '200':
          description: Parameters retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetParametersResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
  /userProfile:
    get:
      x-onecx:
        permissions:
          userProfile:
            - read
      tags:
        - userProfile
      operationId: getUserProfile
      description: Get the user profile of the requesting user
      responses:
        '200':
          description: User profile retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserProfileResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        '404':
          description: User profile not found

  /permissions:
    post:
      x-onecx:
        permissions:
          permission:
            - read
      tags:
        - permission
      operationId: getPermissions
      description: Get all permissions for a specific application by its id and product name
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPermissionsRequest'
      responses:
        '200':
          description: Permissions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPermissionsResponse'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetailResponse'
        '404':
          description: Permissions not found
components:
  schemas:
    GetParametersRequest:
      type: object
      required:
        - products
      properties:
        products:
          type: object
          additionalProperties:
            uniqueItems: true
            type: array
            items:
              type: string
    GetParametersResponse:
      type: object
      required:
        - products
      properties:
        products:
          type: object
          additionalProperties:
            type: object
            additionalProperties:
              type: array
              items:
                $ref: '#/components/schemas/Parameter'
    Parameter:
      type: object
      required:
        - name
        - applicationId
        - productName
        - value
      properties:
        displayName:
          type: string
        description:
          type: string
        applicationId:
          type: string
        productName:
          type: string
        name:
          type: string
        value:
          $ref: '#/components/schemas/ParameterValue'
        importValue:
          $ref: '#/components/schemas/ParameterValue'
    ParameterValue:
      oneOf:
        - type: string
        - type: number
        - type: boolean
        - type: integer
        - type: object
    LoadWorkspaceConfigRequest:
      type: object
      required:
        - path
      properties:
        path:
          type: string
    LoadWorkspaceConfigResponse:
      type: object
      required:
        - 'routes'
        - 'theme'
        - 'workspace'
        - 'components'
        - 'slots'
      properties:
        routes:
          type: array
          items:
            $ref: '#/components/schemas/Route'
        theme:
          $ref: '#/components/schemas/Theme'
        workspace:
          $ref: '#/components/schemas/Workspace'
        components:
          type: array
          items:
            $ref: '#/components/schemas/RemoteComponent'
        slots:
          type: array
          items:
            $ref: '#/components/schemas/Slot'
    Slot:
      type: object
      required:
        - 'name'
        - 'components'
      properties:
        name:
          type: string
        components:
          type: array
          items:
            type: string
    GetPermissionsRequest:
      type: object
      required:
        - appId
        - productName
      properties:
        appId:
          type: string
        productName:
          type: string
    Workspace:
      type: object
      required:
        - name
        - baseUrl
      properties:
        displayName:
          type: string
        name:
          type: string
        baseUrl:
          type: string
        homePage:
          type: string
        logoUrl:
          type: string
        smallLogoUrl:
          type: string
    Theme:
      required:
      - name
      - properties
      type: object
      properties:
        displayName:
          type: string
        name:
          minLength: 2
          type: string
        cssFile:
          type: string
        description:
          type: string
        assetsUrl:
          type: string
        logoUrl:
          type: string
        smallLogoUrl:
          type: string
        faviconUrl:
          type: string
        previewImageUrl:
          type: string
        assetsUpdateDate:
          type: string
        properties:
          type: string
    Route:
      type: object
      required:
        - 'url'
        - 'baseUrl'
        - 'remoteEntryUrl'
        - 'type'
        - 'exposedModule'
        - 'appId'
        - 'productName'
        - 'productVersion'
        - 'pathMatch'
        - 'displayName'
      properties:
        url:
          type: string
        baseUrl:
          type: string
        remoteEntryUrl:
          type: string
        appId:
          type: string
        productName:
          type: string
        productVersion:
          type: string
        technology:
          $ref: '#/components/schemas/Technologies'
        exposedModule:
          type: string
        pathMatch:
          $ref: '#/components/schemas/PathMatch'
        remoteName:
          type: string
        elementName:
          type: string
        displayName:
          type: string
        endpoints:
          type: array
          items:
            $ref: '#/components/schemas/UIEndpoint'
    UIEndpoint:
      type: object
      properties:
        path:
          type: string
        name:
          type: string
    Technologies:
      type: string
      enum: ['Angular', 'WebComponent', 'WebComponentScript', 'WebComponentModule' ]
    PathMatch:
      type: string
      enum: ['full', 'prefix']
    RemoteComponent:
      type: object
      required:
        - 'name'
        - 'url'
        - 'baseUrl'
        - 'remoteEntryUrl'
        - 'exposedModule'
        - 'appId'
        - 'productName'
      properties:
        name:
          type: string
        baseUrl:
          type: string
        remoteEntryUrl:
          type: string
        appId:
          type: string
        productName:
          type: string
        productVersion:
          type: string
        exposedModule:
          type: string
        remoteName:
          type: string
        elementName:
          type: string
        technology:
          $ref: '#/components/schemas/Technologies'
    GetUserProfileResponse:
      type: object
      required:
        - 'userProfile'
      properties:
        userProfile:
          $ref: '#/components/schemas/UserProfile'
    UserProfile:
      type: object
      required:
        - 'userId'
        - 'person'
      properties:
        userId:
          type: string
        organization:
          type: string
        issuer:
          type: string
        tenantId:
          type: string
        person:
          $ref: '#/components/schemas/UserPerson'
        accountSettings:
          $ref: '#/components/schemas/AccountSettings'
        settings:
          type: object
    UserPerson:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        displayName:
          type: string
        email:
          type: string
        address:
          $ref: '#/components/schemas/UserPersonAddress'
        phone:
          $ref: '#/components/schemas/UserPersonPhone'
    UserPersonAddress:
      type: object
      properties:
        street:
          type: string
        streetNo:
          type: string
        city:
          type: string
        postalCode:
          type: string
        country:
          type: string
    UserPersonPhone:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/PhoneType'
        number:
          type: string
    PhoneType:
      type: string
      enum: ['MOBILE', 'LANDLINE']
    AccountSettings:
      type: object
      properties:
        layoutAndThemeSettings:
          $ref: '#/components/schemas/LayoutAndThemeSettings'
        localeAndTimeSettings:
          $ref: '#/components/schemas/LocaleAndTimeSettings'
    LayoutAndThemeSettings:
      type: object
      properties:
        colorScheme:
          $ref: '#/components/schemas/ColorScheme'
        menuMode:
          $ref: '#/components/schemas/MenuMode'
    ColorScheme:
      type: string
      enum: ['AUTO', 'LIGHT', 'DARK']
    MenuMode:
      type: string
      enum: ['HORIZONTAL', 'STATIC', 'OVERLAY', 'SLIM', 'SLIMPLUS']
    LocaleAndTimeSettings:
      type: object
      properties:
        locale:
          type: string
        timezone:
          type: string
    GetPermissionsResponse:
      type: object
      required:
        - permissions
      properties:
        permissions:
          type: array
          items:
            type: string
    ProblemDetailResponse:
      type: object
      properties:
        errorCode:
          type: string
        detail:
          type: string
        params:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailParam'
        invalidParams:
          type: array
          items:
            $ref: '#/components/schemas/ProblemDetailInvalidParam'
    ProblemDetailParam:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    ProblemDetailInvalidParam:
      type: object
      properties:
        name:
          type: string
        message:
          type: string